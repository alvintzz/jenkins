#!/usr/bin/env groovy

pipeline {
    agent { 
        label 'golang-jenkins-slave' 
    }

    tools {
        go 'go-1.17'
    }

    environment {
        //Github Parameter
        COMPANY_NAME = "alvintzz"
        REPOSITORY_NAME = "testapp"
        BRANCH_NAME = "main"
        BINARY_DIR = "cmd/hello-world"

        // Service Parameter
        SERVICE_NAME = "Hello-World"
        SERVICE_OWNER = "core-team"
        NGINX_CONFIG_FILE = "devops/nginx/hello-world.cfg"
        
        REPOSITORY_DIR = "go/src/github.com/$COMPANY_NAME/$REPOSITORY_NAME"
        
        SOCKETMASTER_DIR = "socketmaster"
        SOCKETMASTER_REPO = "zimbatm/socketmaster"
        ANSIBLE_DIR = "ansible"
        INVENTORY_FILE = "$HOME/inventory.yaml"
        PLAYBOOK_FILE = "${WORKSPACE}/${ANSIBLE_DIR}/playbooks/hello-world.yaml"
        SSH_PRIVATE_KEY = "${HOME}/.ssh/gcp_ed25519"
    }

    stages {
        stage('Initialize Ansible') {
            steps {
                dir("${env.ANSIBLE_DIR}") {
                    git branch: "main", url: "https://github.com/${env.COMPANY_NAME}/ansible.git"
                    sh "cp -r ${WORKSPACE}/${env.ANSIBLE_DIR}/roles/* ~/.ansible/roles/"
                }
            }
        }

        stage('Initialize Socketmaster') {
            steps {
                dir("${env.SOCKETMASTER_DIR}") {
                    git branch: "master", url: "https://github.com/zimbatm/socketmaster.git"
                    sh "go build -o socketmaster"
                }
            }
        }

        stage('Pull Code from Github') {
            steps {
                dir("${env.REPOSITORY_DIR}") {
                    git branch: "${env.BRANCH_NAME}", url: "https://github.com/${env.COMPANY_NAME}/${env.REPOSITORY_NAME}.git"
                }
            }
        }

        stage('Building') {
            steps {
                dir("${env.REPOSITORY_DIR}") {
                    sh "go build -o ${env.REPOSITORY_NAME} ./${env.BINARY_DIR}"
                }
            }
        }

        stage('Running Unit Test') {
            steps {
                dir("${env.REPOSITORY_DIR}") {
                    sh 'go test ./... -race -cover'
                }
            }
        }

        stage('Deploying') {
            steps {
                dir("${env.REPOSITORY_DIR}") {
                    ansiblePlaybook inventory: "${env.INVENTORY_FILE}", playbook: "${env.PLAYBOOK_FILE}"
                }
            }
        }

        stage('Just Print something') {
            steps {
                echo 'Just Print something here.'
            }
        }
    }

    post {
        success {
            echo 'Pipeline Success'
        }

        failure {
            echo 'Pipeline Failed'
        }
    }
}